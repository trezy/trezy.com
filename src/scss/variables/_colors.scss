@mixin generateHSLCustomProperties($name, $h, $s, $l) {
	// $safeName is necessary because $name can be a color literal. Sass doesn't
	// like that.
	$safeName: '' + $name;

	--#{$safeName}-h: calc(#{$h} + var(--hue-shift));
	--#{$safeName}-s: #{$s};
	--#{$safeName}-l: #{$l};

	--#{$safeName}-hsl: var(--#{$safeName}-h), var(--#{$safeName}-s), var(--#{$safeName}-l);

	--#{$safeName}: hsl(var(--#{$safeName}-hsl));
}

@mixin generateHSLCustomPropertiesFromColor($color) {
	@include generateHSLCustomProperties(
		$color,
		hue($color),
		saturation($color),
		lightness($color),
	)
}

@mixin generateHSLCustomPropertiesFromHex($name, $color) {
	@include generateHSLCustomProperties(
		$name,
		hue($color),
		saturation($color),
		lightness($color),
	)
}

:root {
	--hue-shift: 0deg;

	// Generate individual hue, saturation, and lightness properties, as well as
	// full HSL and color props
	@include generateHSLCustomPropertiesFromColor(black);
	@include generateHSLCustomPropertiesFromColor(gold);
	@include generateHSLCustomPropertiesFromColor(orange);
	@include generateHSLCustomPropertiesFromColor(silver);
	@include generateHSLCustomPropertiesFromColor(white);

	@include generateHSLCustomPropertiesFromHex(blue, #0092c7);
	@include generateHSLCustomPropertiesFromHex(burlap, #cf9a59);
	@include generateHSLCustomPropertiesFromHex(red, #f74f4f);
	@include generateHSLCustomPropertiesFromHex(yellow, #ffbf00);
	@include generateHSLCustomPropertiesFromHex(dim-white, #b7b7b7);
	@include generateHSLCustomPropertiesFromHex(dark-grey, #3b3434);
	@include generateHSLCustomPropertiesFromHex(light-grey, #373737);

	@include generateHSLCustomPropertiesFromHex(background-color, #ffffff);
	@include generateHSLCustomPropertiesFromHex(background-color-alt, #b3b3b3);
	@include generateHSLCustomPropertiesFromHex(brand-primary, #0092c7);
	@include generateHSLCustomPropertiesFromHex(inverted-text-color, #ffffff);
	@include generateHSLCustomPropertiesFromHex(main-background-color, #1a1a1a);
	@include generateHSLCustomPropertiesFromHex(text-color, #1a1a1a);

	@include generateHSLCustomPropertiesFromHex(danger-background-color, #d0153f);
	@include generateHSLCustomPropertiesFromHex(danger-text-color, #ffffff);

	@include generateHSLCustomPropertiesFromHex(informational-background-color, #0092c7);
	@include generateHSLCustomPropertiesFromHex(informational-text-color, #ffffff);

	@include generateHSLCustomPropertiesFromHex(success-background-color, #0bd49c);
	@include generateHSLCustomPropertiesFromHex(success-text-color, #ffffff);

	@include generateHSLCustomPropertiesFromHex(warning-background-color, #fad619);
	@include generateHSLCustomPropertiesFromHex(warning-text-color, #000000);

	--transparent: transparent;

	&[react-color-mode="dark"] {
		@include generateHSLCustomPropertiesFromHex(text-color, #ffffff);
		@include generateHSLCustomPropertiesFromHex(inverted-text-color, #1a1a1a);
		@include generateHSLCustomPropertiesFromHex(background-color, #1a1a1a);
		@include generateHSLCustomPropertiesFromHex(background-color-alt, #373737);
		@include generateHSLCustomPropertiesFromHex(main-background-color, #000000);
	}

	@media (prefers-color-scheme: dark) {
		&:not([react-color-mode="light"]) {
			@include generateHSLCustomPropertiesFromHex(text-color, #ffffff);
			@include generateHSLCustomPropertiesFromHex(inverted-text-color, white);
			@include generateHSLCustomPropertiesFromHex(background-color, #1a1a1a);
			@include generateHSLCustomPropertiesFromHex(background-color-alt, #373737);
			@include generateHSLCustomPropertiesFromHex(main-background-color, #000000);
		}
	}
}
